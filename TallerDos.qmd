---
title: "Taller Dos"
format: html
editor: visual
---

## Punto 1.

El vector de medias de todas las variables. a) ¿Cuál es la variable que tiene la mayor media?

La mayor media es 888021.7727 y corresponde a PC-Población de la ciudad.

b)  ¿Cuál es la variable que tiene la menor media?

La menor media es 0.01401094724 y corresponde a TCP-Tasa de crecimiento de la población.

c)  ¿A qué puede atribuirse la diferencia en los valores de los dos promedios?

La diferencia radica en las unidades de medida usadas en cada una de las variables, pues, en PC se mide el número de habitantes de las ciudades, es decir, en miles o millones, en cambio, la Tasa de crecimiento de la población es una proporción, y en este caso esas proporciones son menores a 1, por lo que se puede observar que las unidades de medida trabajadas en cada variable hacen que las medias de estas dos variables sean tan diferentes entre ellas.

```{r, echo=FALSE}
library(readxl)
library(knitr)
    
    # PUNTO 1
    # Leer el archivo de Excel
    archivo <-  read_excel("C:/Users/fabia/OneDrive - Universidad Nacional de Colombia/UNAL/Descriptiva multivariada/Talleres/T1/ciudades original-filtrado-con etiquetas.xlsx")

    
    # Seleccionar  RH
    RH <- archivo[, c("RH_1", "RH_2", "RH_5", "RH_6", "RH_7", "RH_8", "RH_9", "RH_10", "RH_11", "RH_12", "RH_13", "RH_14", "RH_15", "RH_16")]
    
    # Renombrar 
    colnames(RH) <- c("PC", "TCP", "AA", "CBPS", "CBES", "RAP", "CC", "CPT", "CS", "MI", "DCFS", "VI", "H","S")
    
    # Verificar nombres
    #colnames(RH)
    
    # Calcular el vector de medias de la subtabla RH
    vector_medias <- colMeans(RH, na.rm = TRUE)  # na.rm = TRUE para omitir valores faltantes (NA)
    
    # Mostrar el vector de medias
    kable(round(vector_medias,3) )
    
    #  vector de medias
    vector_medias <- colMeans(RH, na.rm = TRUE)
    
    #  la mayor media
    mayor_media <- max(vector_medias)
    
    #  índice de la columna que tiene la mayor media
    indice_mayor_media <- which.max(vector_medias)
    
    # Mostrar la mayor media y el índice correspondiente
    cat("La mayor media es:", mayor_media, "\n")
    cat("El índice correspondiente es:", names(vector_medias)[indice_mayor_media], "\n")
    
    
    #  la menor media
    menor_media <- min(vector_medias)
    
    #  índice de la columna que tiene la menor media
    indice_menor_media <- which.min(vector_medias)
    
    # la menor media y el índice correspondiente
    cat("La menor media es:", menor_media, "\n")
    cat("El índice correspondiente es:", names(vector_medias)[indice_menor_media], "\n")
    
    # diferencia entre la mayor y la menor media
    diferencia <- mayor_media - menor_media
    
    # resultado
    cat("La diferencia entre la mayor y la menor media es:", diferencia, "\n")
  
    
```

## Punto 2.

Calcular la matriz Y de datos centrados y estandarizados y contestar los items 1a y 1b del punto 1. ¿A qué pueden atriburse las diferencias en los promedios ahora?

***a)      ¿Cuál es la variable que tiene la mayor media?***

La mayor media es 2.367109034e-16 y corresponde a CC-Calidad de los colegios

***b)      ¿Cuál es la variable que tiene la menor media?***

La menor media es -7.014590928e-16 y corresponde a CBPS-Cobertura bruta en primaria y secundaria.

***c)      ¿*** ***A qué pueden atribuirse las diferencias en los promedios ahora?***

Ambas medias tienen valores muy pequeños que podrían ser expresados simplemente como 0, es decir, ambas medias son iguales, y esto ocurre porque después de centrar y estandarizar los datos ya las variables son comparables, pues lo que hace la matriz Y es igualar las unidades de medida sin cambiar la estructura original de las variables analizadas.

```{r,echo=FALSE}

    #PUNTO 2
    
    # Centrar y estandarizar las columnas seleccionadas de RH
    Xtil <- scale(RH, scale = T)
    
    # Mostrar la matriz resultante
    print("Matriz Estandarizada:   ")
    kable(round(Xtil,3) )
    
    vector_medias_centradas_estandarizadas <- colMeans(Xtil)
    
    # Mostrar el vector de medias
    print("Vector de medias:   ")
    kable(round(vector_medias_centradas_estandarizadas,3) )
  
```

Se obtiene lo siguiente:

```{r,echo=FALSE}

   
    # la mayor media
    mayor_mediaCE <- max(vector_medias_centradas_estandarizadas)
    
    # índice de la columna que tiene la MAYOR media
    indice_mayor_mediaCE <- which.max(vector_medias_centradas_estandarizadas)
    
    #  la MAYOR media y el índice correspondiente
    cat("La mayor media es:", mayor_mediaCE, "\n")
    cat("El índice correspondiente es:", names(vector_medias_centradas_estandarizadas)[indice_mayor_mediaCE], "\n")
    
    
    # la menor media
    menor_mediaCE <- min(vector_medias_centradas_estandarizadas)
    
    # el índice de la columna que tiene la menor media
    indice_menor_mediaCE <- which.min(vector_medias_centradas_estandarizadas)
    
    # la menor media y el índice correspondiente
    cat("La menor media es:", menor_mediaCE, "\n")
    cat("El índice correspondiente es:", names(vector_medias_centradas_estandarizadas)[indice_menor_mediaCE], "\n")
    
    # la diferencia entre la mayor y la menor media
    diferencia_mediasCE <- mayor_mediaCE - menor_mediaCE
    
    # Mostrar el resultado
    cat("La diferencia entre la mayor y la menor media despues de centrar y estandarizar es:", diferencia_mediasCE, "\n")
    
 
    
```

## Punto 3.

Calcular la matriz de covarianzas S. Identificar las dos variables con mayor covarianza y las dos con menor covarianza

Observemos que la mejor relación sucede entre la Cobertura bruta en educación superior y la población de la ciudad, seguido de la población de la ciudad y la calidad de los colegios. Así como tenemos con menor covarianza la capacitación para el trabajo con la población de la ciudad y luego la relación entre la población de la ciudad y la violencia Intrafamiliar.

Se obtiene la matriz de covarianzas

```{r, echo=FALSE}
library(readxl)
ciudades_original_filtrado_con_etiquetas_copia <- read_excel("C:/Users/fabia/OneDrive - Universidad Nacional de Colombia/UNAL/Descriptiva multivariada/Talleres/T1/ciudades original-filtrado-con etiquetas.xlsx")

ciudades_original_filtrado_con_etiquetas_copia<-ciudades_original_filtrado_con_etiquetas_copia[,1:15]

colnames(ciudades_original_filtrado_con_etiquetas_copia)<-c("Ciudades","PC","TCP","AA","CBPS","CBES","RAP","CC","CPT","CS","MI","DCFS","VI","H","S")
cov_matrix <- cov(ciudades_original_filtrado_con_etiquetas_copia[,2:15])
kable(round(cov_matrix,4) )

```

Se generan dos mapas de calor, los cuales se puede ver a continuación

```{r, echo=FALSE}

#View(cov_matrix)

library(ggplot2)
library(reshape2)

# Convertir la matriz a un data frame para ggplot
cov_df <- melt(cov_matrix)

# Crear un heatmap
ggplot(cov_df, aes(Var1, Var2, fill = value)) +
  geom_tile() +
  scale_fill_gradient2(low = "blue", high = "red", mid = "white") +
  theme_minimal() +
  labs(title = "Matriz de Covarianza")

# Ordenar la matriz por filas y columnas
cov_matrix_ordered <- cov_matrix[order(rowMeans(cov_matrix)), order(colMeans(cov_matrix))]
#View(cov_matrix_ordered)

# Convertir la matriz a un data frame para ggplot ordenada
cov_df_ordered <- melt(cov_matrix_ordered)

# Crear un heatmap para visualizar mejor la matriz organizada
ggplot(cov_df_ordered, aes(Var1, Var2, fill = value)) +
  geom_tile() +
  scale_fill_gradient2(low = "blue", high = "red", mid = "white") +
  theme_minimal() +
  labs(title = "Matriz de Covarianza ordenada")

```

## Punto 4.

Calcular la matriz de correlación R. Identificar las dos variables con mayor correlación y las dos con menor correlación. ¿Son las mismas que las que tienen mayor y menor covarianza identificadas en el punto 3?

```{r, echo=FALSE}

library(readxl)


RH <- read_excel("C:/Users/fabia/OneDrive - Universidad Nacional de Colombia/UNAL/Descriptiva multivariada/Talleres/T1/ciudades original-filtrado-con etiquetas.xlsx", sheet = 1, range = cell_cols(1:15))

colnames(RH) <- c("Ciudad","PC","TCP","AA","CBPS","CBES","RAP","CC","CPT","CS","MI","DCFS","VI","H","S")


# Punto 4

CorrelacionM <- cor(RH[,2:15])

kable(round(CorrelacionM,3))


```

Graficamente podemos obtener, el siguiente mapa de calor para las correlaciones

```{r,echo=FALSE}
matriz_cor_melt <- melt(CorrelacionM)

# Crear el mapa de calor
ggplot(matriz_cor_melt, aes(Var1, Var2, fill = value)) +
  geom_tile() +
  scale_fill_gradient2(low = "blue", high = "red", mid = "white", midpoint = 0) +
  labs(title = "Mapa de Calor de la Matriz de Correlación", fill = "Correlación") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

## Punto 5.

Calcular el producto $Y′Y$ y verificar que es exactamente la matriz R obtenida en el punto 4. ¿Por qué?

```{r,echo=FALSE}

Y <- scale(RH[, 2:15], scale = TRUE)

Yt <- t(Y)

R <- (1/22) * (Yt %*% Y)
kable(round(R,3))        

           
```

Grafico de calor para $Y'Y$ :

```{r}
matriz_cor_melt <- melt(R)

# Crear el mapa de calor
ggplot(matriz_cor_melt, aes(Var1, Var2, fill = value)) +
  geom_tile() +
  scale_fill_gradient2(low = "blue", high = "red", mid = "white", midpoint = 0) +
  labs(title = "Mapa de Calor de la Matriz de Correlación", fill = "Correlación") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

Tabla de la diferencia entre Correlación de los datos verdaderos respecto a los datos centrados.

```{r, echo=FALSE}
Dr_corr<-CorrelacionM-R
kable(round(Dr_corr,3)) 
```

## Punto 6.

Utilizar el archivo ciudades para construir un indicador de Recursos Humanos IRH con las variables Tasa de Crecimiento de la Población, Analfabetismo Absoluto, Cobertura bruta en educación superior, Relación alumno-profesor, Calidad de los colegios, Mortalidad Infantil con las siguientes ponderaciones b′ = (0,82, 0,89, −0,56, 0,77, −0,69, 0,64) respectivamente.

```{r, echo=FALSE}
library(readxl)
# Cargar los datos
ciudades <- read_excel("C:/Users/fabia/OneDrive - Universidad Nacional de Colombia/UNAL/Descriptiva multivariada/Talleres/T1/ciudades original-filtrado-con etiquetas.xlsx")

# Seleccionar las columnas de interés
columnas_seleccionadas <- ciudades[, c(3, 4, 6, 7, 8, 11)]
colnames(columnas_seleccionadas)<-c("TPC", "AA", "CBES", "RAP", "CC", "MI" )
# Guardamos las ponderaciones
ponderaciones <- c(0.82, 0.89, -0.56, 0.77, -0.69, 0.64)

# Crear la nueva columna IRH
IRH <- as.matrix(columnas_seleccionadas) %*% ponderaciones

# Agregar la columna IRH a la matriz de columnas seleccionadas
columnas_seleccionadas <- cbind(columnas_seleccionadas, IRH)

# Agregar la columna IRH a la matriz de datos original
ciudades <- cbind(ciudades, IRH)

kable(columnas_seleccionadas)


```

Tasa de Crecimiento de la Población: Refleja la dinámica demográfica de cada ciudad. Analfabetismo Absoluto: Indica el nivel de educación básica de la población.

Cobertura bruta en educación superior: Muestra el acceso de la población a estudios universitarios. Relación alumno-profesor: Refleja la calidad y cantidad de la educación básica.

Calidad de los colegios: Indica el nivel de calidad de las instituciones educativas.

Mortalidad Infantil: Es un indicador del estado de salud y bienestar de la población.

¿Qué nos dice el IRH?\
El IRH, al ser una combinación de estos indicadores, nos proporciona una visión más holística y compleja de la situación de los recursos humanos en cada ciudad. Podemos interpretarlo como un indicador general del capital humano y su desarrollo.

Un valor alto de IRH podría sugerir que una ciudad tiene:\
Una población educada: Altos niveles de alfabetización y cobertura en educación superior. Un sistema educativo de calidad: Buena relación alumno-profesor y calidad de los colegios. Un nivel de vida más alto: Menor mortalidad infantil y posiblemente mayores ingresos per cápita (aunque esta última variable no está explícita en los datos). Un potencial de desarrollo económico mayor: Una población educada y saludable es más productiva y puede contribuir al crecimiento económico.

Veamos que aunque eso es lo que nos dice la variable IRH al centrarnos en la Rioacha podemos ver que es donde se encuentra el valor más alto de mortalidad infantil osea que sea un valor alto específicamente en esta variable no nos indica que tenga un buen indice de recursos humanos ya que debería ser mejor entre más bajo sea. Así como en las ponderaciones tenemos una cobertura bruta en educación superior y la calidad de los colegios que no son valores altos a comparación de los otros y eso hace que no reste valores tan altos para obtener el IRH.

## Punto 7.

Calcular la distancia euclidiana entre ciudades respecto a las variables Analfabetismo y Rel.al.prof e identificar las dos ciudades más cercanas y las dos ciudades más lejanas.

```{r, echo=FALSE}
ciudades <- read.csv2("C:/Users/fabia/OneDrive - Universidad Nacional de Colombia/UNAL/Descriptiva multivariada/Talleres/Recopilación/Bases de datos/ciudades.csv")

#install.packages("distances")
library(distances)

rownames(ciudades) <- ciudades$CIUDADES

Ciudades1 <- ciudades[,-1]
Ciudades2 <- Ciudades1[, c("Analfabetismo", "Rel.al.prof")]

Distancia <- distances(Ciudades2, id_variable = row.names(Ciudades2))
DisEuc <- as.matrix(Distancia)

distancias_ordenadas <- DisEuc[lower.tri(DisEuc)]

min_dist_indices <- order(distancias_ordenadas)[1:2] 
min_distancias <- distancias_ordenadas[min_dist_indices]

min_ciudad1 <- rownames(DisEuc)[which(DisEuc == min_distancias[1], arr.ind = TRUE)[1, 1]]
min_ciudad2 <- colnames(DisEuc)[which(DisEuc == min_distancias[1], arr.ind = TRUE)[1, 2]]

min_ciudad3 <- rownames(DisEuc)[which(DisEuc == min_distancias[2], arr.ind = TRUE)[1, 1]]
min_ciudad4 <- colnames(DisEuc)[which(DisEuc == min_distancias[2], arr.ind = TRUE)[1, 2]]

max_dist_indices <- order(distancias_ordenadas, decreasing = TRUE)[1:2]  
max_distancias <- distancias_ordenadas[max_dist_indices]

max_ciudad1 <- rownames(DisEuc)[which(DisEuc == max_distancias[1], arr.ind = TRUE)[1, 1]]
max_ciudad2 <- colnames(DisEuc)[which(DisEuc == max_distancias[1], arr.ind = TRUE)[1, 2]]

max_ciudad3 <- rownames(DisEuc)[which(DisEuc== max_distancias[2], arr.ind = TRUE)[1, 1]]
max_ciudad4 <- colnames(DisEuc)[which(DisEuc == max_distancias[2], arr.ind = TRUE)[1, 2]]

tabla <- data.frame(
  Tipo = rep(c("Ciudad más cercana", "Ciudad más lejana"), each = 2),
  Ciudad1 = c(min_ciudad1, min_ciudad3, max_ciudad1, max_ciudad3),
  Ciudad2 = c(min_ciudad2, min_ciudad4, max_ciudad2, max_ciudad4),
  Distancia = c(min_distancias[1], min_distancias[2], max_distancias[1], max_distancias[2])
)

kable(tabla)

# Identificar las dos ciudades más cercanas y las dos ciudades más lejanas.
# 
```

Las dos ciudades más cercanas: Manizales y Bucaramanga.

Las dos ciudades más lejanas: San Andrés y Medellín.

## Punto 8.

Calcular la distancia de Mahalanobis entre ciudades respecto a las variables Analfabetismo y Rel.al.prof e identificar las dos ciudades más cercanas y las dos ciudades más lejanas. ¿Son las mismas ciudades que cercanas o lejanas que las obtenidas con las distancias euclidianas del punto 7?

```{r, echo=FALSE}
ciudades <- read.csv2("C:/Users/fabia/OneDrive - Universidad Nacional de Colombia/UNAL/Descriptiva multivariada/Talleres/Recopilación/Bases de datos/ciudades.csv")

#install.packages("distances")
library(distances)

rownames(ciudades) <- ciudades$CIUDADES

Ciudades1 <- ciudades[,-1]
Ciudades2 <- Ciudades1[, c("Analfabetismo", "Rel.al.prof")]

DiMah <- distances(Ciudades2, id_variable = row.names(Ciudades2), normalize = "mahalanobize")
Mahalanois <- round(as.matrix(DiMah), 2)

distancias_ordenadas <- Mahalanois[lower.tri(Mahalanois)]

min_dist_indices <- order(distancias_ordenadas)[1:2] 
min_distancias <- distancias_ordenadas[min_dist_indices]

min_ciudad1 <- rownames(Mahalanois)[which(Mahalanois == min_distancias[1], arr.ind = TRUE)[1, 1]]
min_ciudad2 <- colnames(Mahalanois)[which(Mahalanois == min_distancias[1], arr.ind = TRUE)[1, 2]]

min_ciudad3 <- rownames(Mahalanois)[which(Mahalanois == min_distancias[2], arr.ind = TRUE)[1, 1]]
min_ciudad4 <- colnames(Mahalanois)[which(Mahalanois == min_distancias[2], arr.ind = TRUE)[1, 2]]

max_dist_indices <- order(distancias_ordenadas, decreasing = TRUE)[1:2]  
max_distancias <- distancias_ordenadas[max_dist_indices]

max_ciudad1 <- rownames(Mahalanois)[which(Mahalanois == max_distancias[1], arr.ind = TRUE)[1, 1]]
max_ciudad2 <- colnames(Mahalanois)[which(Mahalanois == max_distancias[1], arr.ind = TRUE)[1, 2]]

max_ciudad3 <- rownames(Mahalanois)[which(Mahalanois == max_distancias[2], arr.ind = TRUE)[1, 1]]
max_ciudad4 <- colnames(Mahalanois)[which(Mahalanois == max_distancias[2], arr.ind = TRUE)[1, 2]]

tabla <- data.frame(
  Tipo = rep(c("Ciudad más cercana", "Ciudad más lejana"), each = 2),
  Ciudad1 = c(min_ciudad1, min_ciudad3, max_ciudad1, max_ciudad3),
  Ciudad2 = c(min_ciudad2, min_ciudad4, max_ciudad2, max_ciudad4),
  Distancia = c(min_distancias[1], min_distancias[2], max_distancias[1], max_distancias[2])
)

kable(tabla)


```

¿Son las mismas ciudades que cercanas o lejanas que las obtenidas con las distancias euclidianas del punto 7? Las ciudades más lejanas obtenidas en el punto 7 son diferentes a las del punto 8. Sin embargo, las ciudades más cercanas coinciden en ambos casos.

## Punto 9.

Comprobar que la matriz de covarianzas se puede obtener con el producto $\frac{1}{n} \hat{X}′\hat{X}$ calcuandola a partir de la matriz de datos centrados de la matriz RH

Se halla $\frac{1}{n} \hat{X}′\hat{X}$:

```{r, message=FALSE, echo=FALSE}
library(readxl)
library(dplyr) 
# Leer el archivo Excel con los datos
ciudades <- read_excel("C:/Users/fabia/OneDrive - Universidad Nacional de Colombia/UNAL/Descriptiva multivariada/Talleres/T1/ciudades original-filtrado-con etiquetas.xlsx")
##### FILTRAR COLUMNAS CON PREFIJOS ESPECÍFICOS CYT #####

# Seleccionar columnas que comiencen con "RH"
RH <- ciudades %>% select(starts_with("RH"))


##### PUNTO 9 ######
# Calcular la media de cada columna
RH_medias <- colMeans(RH)

# Restar la media de cada columna
RH_centrada <- sweep(RH, 2, RH_medias, "-")

# Convertir a matriz si es necesario
RH_centrada <- as.matrix(RH_centrada)

# Producto matricial
matriz_cov_RH <- (1/21)*(t(RH_centrada) %*% RH_centrada)
kable(round(matriz_cov_RH,4))

```

Se realiza la diferencia entre la matriz de covarianza y $\frac{1}{n} \hat{X}′\hat{X}$ :

```{r, echo=FALSE}
# Mostrar resultado
dif_covRH_matrizcovRH<- cov(RH) - matriz_cov_RH

difcero_cov <- round(dif_covRH_matrizcovRH, 6)
kable(difcero_cov)
```

Se obtiene una matriz de cero, lo cual nos dice que $\frac{1}{n} \hat{X}′\hat{X}$ es la misma matriz de covarianzas.

## Punto10.

Comprobar que la matriz de correlación se puede obtener con el producto 1 n $Y′Y$ calcuandola a partir de la matriz de datos centrados estandarizado de la matriz RH

Se halla matriz de correlación estimada $Y′Y$ :

```{r, echo=FALSE}
##### 

# Calcular la desviación estándar muestral de cada columna
RH_sd <- apply(RH_centrada, 2, sd)  # Desviaciones estándar de las columnas

# Dividir cada elemento por la desviación estándar de su columna
RH_estandarizada <- sweep(RH_centrada, 2, RH_sd, "/")

matriz_cor_RH<- (1/21)*(t(RH_estandarizada)%*%(RH_estandarizada))

kable(matriz_cor_RH)

```

Se realiza la diferencia entre la matriz de correlación y $Y'Y$ :

```{r, echo=FALSE}
dif_corRH_matrizcorRH<- cor(RH) - matriz_cor_RH

difcero_cor <- round(dif_corRH_matrizcorRH, 6)
kable(difcero_cor) 
```

Se obtiene una matriz de cero, lo cual nos dice que $Y'Y$ es la misma matriz de correlación.
